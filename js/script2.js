// Encapsulamento do c칩digo em uma fun칞칚o autoexecut치vel para evitar polui칞칚o do escopo global
(() => {
    // Seletores dos principais elementos da interface
    const container = document.querySelector('.container');
    const qrCodeBtn = document.querySelector('#qr-form button');
    const qrCodeInput = document.querySelector('#qr-form input');
    const qrCodeImg = document.querySelector('#qr-code img');
    const QR_CODE_API = 'https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=';
    const audio = document.querySelector('#audio');

    // Fun칞칚o respons치vel por gerar o QR Code
    function gerarQrCode() {
        // Remove espa칞os extras do in칤cio e fim do valor
        const inputValue = qrCodeInput.value.trim();
        // N칚o faz nada se o campo estiver vazio
        if (!inputValue) return;

        // Feedback visual ao usu치rio
        qrCodeBtn.innerText = 'Gerando QR Code ...';

        // Define a imagem do QR Code usando a API externa
        qrCodeImg.src = `${QR_CODE_API}${encodeURIComponent(inputValue)}`;

        // Ao carregar a imagem, ativa o container e atualiza o bot칚o
        qrCodeImg.onload = () => {
            container.classList.add('active');
            qrCodeBtn.innerText = 'C칩digo Criado!';
            audio.play(); // 游댉 Toca o som ao gerar com sucesso
        };



        // Tratamento de erro caso a imagem n칚o carregue
        qrCodeImg.onerror = () => {
            qrCodeBtn.innerText = 'Erro ao gerar QR Code!';
        };
    }

    // Fun칞칚o para lidar com a tecla Enter no campo de input
    function aoPressionarEnter(e) {
        if (e.code === 'Enter') {
            // Previne o envio do formul치rio caso exista
            e.preventDefault();
            gerarQrCode();
        }
    }

    // Fun칞칚o para resetar o estado visual caso o input fique vazio
    function aoDigitarInput() {
        if (!qrCodeInput.value.trim()) {
            container.classList.remove('active');
            qrCodeBtn.innerText = 'Gerar QR Code';
        }
    }

    // Adiciona os event listeners apenas uma vez
    qrCodeBtn.addEventListener('click', gerarQrCode);
    qrCodeInput.addEventListener('keydown', aoPressionarEnter);
    qrCodeInput.addEventListener('keyup', aoDigitarInput);

    // Coment치rios:
    // - O c칩digo agora est치 encapsulado, evitando conflitos de vari치veis globais.
    // - O tratamento de erro foi adicionado para feedback ao usu치rio.
    // - Valida칞칚o aprimorada do input (trim).
    // - Event listeners organizados fora da fun칞칚o principal.
    // - Uso de constantes para strings fixas.
})();